import { EmbeddingFunction, EmbeddingFunctionSpace } from 'chromadb';

interface OpenAIConfig {
    api_key_env_var?: string;
    model_name: string;
    organization_id?: string;
    dimensions?: number;
}
interface OpenAIArgs {
    apiKeyEnvVar?: string;
    modelName: string;
    organizationId?: string;
    dimensions?: number;
    apiKey?: string;
}
declare class OpenAIEmbeddingFunction implements EmbeddingFunction {
    readonly name = "openai";
    private readonly apiKeyEnvVar;
    private readonly modelName;
    private readonly dimensions;
    private readonly organizationId;
    private client;
    constructor(args: OpenAIArgs);
    generate(texts: string[]): Promise<number[][]>;
    defaultSpace(): EmbeddingFunctionSpace;
    supportedSpaces(): EmbeddingFunctionSpace[];
    static buildFromConfig(config: OpenAIConfig): OpenAIEmbeddingFunction;
    getConfig(): OpenAIConfig;
    validateConfigUpdate(newConfig: Record<string, any>): void;
    static validateConfig(config: OpenAIConfig): void;
}

export { type OpenAIArgs, type OpenAIConfig, OpenAIEmbeddingFunction };
